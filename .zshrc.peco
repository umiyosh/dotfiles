# peco
# TODO autoload化 http://qiita.com/mollifier/items/6fdeff2750fe80f830c8
alias -g P='| p'

function pecoPipe() {
  peco | pecoAfterAction "vi" \
    'zip -e ./archive.$(date +%Y%m%d%H%M%S).zip' \
    'tar cvfz ./archive.$(date +%Y%m%d%H%M%S).tar.gz' \
    "rm -ri" \
    "inputCommandAny" \
    "%%STDIN%% pbcopy"
}
alias p=pecoPipe

function pecoCdr() {
  dirs -l|perl -pe 's/ /\n/g'| peco | pecoAfterAction "cd"
}
alias cdr=pecoCdr

function pecoKill() {
    for pid in `ps aux | peco | awk '{ print $2 }'`
    do
        kill $pid
        echo "Killed ${pid}"
    done
}
alias pk="pecoKill"

function pecoAg () {
  ag $@  | peco  | awk -F : '{print "-c " $2 " " $1}' | pecoAfterAction "vi"
}
alias agv=pecoAg

function pecoAck () {
  ack $@  | peco | awk -F : '{print "-c " $2 " " $1}' | pecoAfterAction "vi"
}
alias ackv=pecoAck

function pecoLs(){
  ls -alL $@| peco | perl -lane 'print "@F[8..$#F]"' | pecoAfterAction "vi" \
    "cd" \
    'zip -e ./archive.$(date +%Y%m%d%H%M%S).zip' \
    'tar cvfz ./archive.$(date +%Y%m%d%H%M%S).tar.gz' \
    "rm -ri" \
    "inputCommandAny" \
    "%%STDIN%% pbcopy" \
}
alias l=pecoLs

function pecoFind() {
  find $@ | peco | pecoAfterAction "vi" \
    "cd" \
    'zip -e ./archive.$(date +%Y%m%d%H%M%S).zip' \
    'tar cvfz ./archive.$(date +%Y%m%d%H%M%S).tar.gz' \
    "rm -ri" \
    "inputCommandAny" \
    "%%STDIN%% pbcopy"
}
alias fpe=pecoFind

function pecoLocate() {
  locate $@ | peco | pecoAfterAction "vi" \
    "cd" \
    'zip -e ./archive.$(date +%Y%m%d%H%M%S).zip' \
    'tar cvfz ./archive.$(date +%Y%m%d%H%M%S).tar.gz' \
    "rm -ri" \
    "inputCommandAny" \
    "%%STDIN%% pbcopy"
}
alias lpe=pecoLocate

function pecoMdfind() {
  mdfind $@ | peco | pecoAfterAction "vi" \
    "cd" \
    'zip -e ./archive.$(date +%Y%m%d%H%M%S).zip' \
    'tar cvfz ./archive.$(date +%Y%m%d%H%M%S).tar.gz' \
    "rm -ri" \
    "inputCommandAny" \
    "%%STDIN%% pbcopy"
}
alias mpe=pecoMdfind

function pecoGit() {
  cd $(git rev-parse --show-toplevel)
  (git status --porcelain;git ls-files) | peco | awk 'BEGIN{FS= " "}{print $NF}'| \
    pecoAfterAction "git add" \
      "git checkout" \
      "git reset HEAD" \
      "git diff" \
      "git diff --cached" \
      "git rm" \
      "%%STDIN%% pbcopy" \
      "vi" \
      "rm -ri" \
      "inputCommandAny"
  popd
}
alias gpe=pecoGit

# %%STDIN%% command => Sournce | command
# command           => eval command Source
function pecoAfterAction() {
  Actions=($@)
  Source=( ${(@f)"$(< /dev/stdin)"} )
  if [[ $#Actions -gt 1 ]]; then
    Action=$(for Action in $Actions ;do echo $Action;done|peco --prompt "SELECT ACTION >>"|head -1)
  else
    Action=$Actions
  fi
  if [[ -z $Source || -z $Action ]]; then
    echo
    echo nothing selected
    return
  fi
  if [[ $Action =~ ^%%STDIN%% ]]; then
    Action=$(echo $Action | perl -pe 's/^%%STDIN%% +//g')
    for selected in $Source; do
      echo $selected
    done | $Action
  else
    eval $Action $Source < /dev/tty
  fi
}

# action define
function inputCommandAny() {
  echo -n "command?:"
  read command
  eval $command $@
}

# Widgets
## git add をpecoでする
## http://petitviolet.hatenablog.com/entry/20140722/1406034439
function peco-select-gitadd() {
    local SELECTED_FILE_TO_ADD="$(git status --porcelain | \
                                  peco --query "$LBUFFER" | \
                                  awk -F ' ' '{print $NF}')"
    if [ -n "$SELECTED_FILE_TO_ADD" ]; then
      BUFFER="git add $(echo "$SELECTED_FILE_TO_ADD" | tr '\n' ' ')"
      CURSOR=$#BUFFER
    fi
    zle accept-line
}
zle -N peco-select-gitadd
bindkey "^a^a" peco-select-gitadd
