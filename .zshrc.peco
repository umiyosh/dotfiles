# peco
# TODO autoload化 http://qiita.com/mollifier/items/6fdeff2750fe80f830c8
alias -g P='| peco'

function cdr() {
  dirs -l|perl -pe 's/ /\n/g'| peco | pecoAfterAction "cd" "gzip"
}

function peco-pkill() {
    for pid in `ps aux | peco | awk '{ print $2 }'`
    do
        kill $pid
        echo "Killed ${pid}"
    done
}
alias pk="peco-pkill"

function agv () {
  ag $@  | peco  | awk -F : '{print "-c " $2 " " $1}' | pecoAfterAction "vi"
}

function ackv () {
  ack $@  | peco | awk -F : '{print "-c " $2 " " $1}' | pecoAfterAction "vi"
}

function lsp(){
  ls $@| peco | awk '{print $NF}' | pecoAfterAction "vi" "cd" "gzip" "rm -ri" "input-command-any" "copyStrings"
}
function findp() {
  find $@ | peco | pecoAfterAction "vi" "cd" "gzip" "rm -ri" "input-command-any" "copyStrings"
}
alias fpe=findp

function locatep() {
  locate $@ | peco | pecoAfterAction "vi" "cd" "gzip" "rm -ri" "input-command-any" "copyStrings"
}
alias lpe=locatep

function mdfindp() {
  mdfind $@ | peco | pecoAfterAction "vi" "cd" "gzip" "rm -ri" "input-command-any" "copyStrings"
}
alias mpe=mdfindp

function gitpeco() {
  git status --porcelain | peco | awk 'BEGIN{FS= " "}{print $NF}'| \
    pecoAfterAction "git add" "git checkout" "git reset HEAD" "copyStrings" "vi"
}
alias gpe=gitpeco

function pecoAfterAction() {
  Actions=($@)
  Source=($( < /dev/stdin  ))
  if [[ $#Actions -gt 1 ]]; then
    Action=$(for Action in $Actions ;do echo $Action;done|peco --prompt "SELECT ACTION >>"|head -1)
  else
    Action=$Actions
  fi
  if [[ -z $Source ]]; then
    echo
    echo nothing selected
    return
  fi
  eval $Action $Source < /dev/tty
}

# action define
function input-command-any() {
  echo -n "command?:"
  read command
  eval $command $@
}
function copyStrings() {
  echo $@ | perl -pe 's/ +/\n/g'|pbcopy
}

# Widgets
## git add をpecoでする
## http://petitviolet.hatenablog.com/entry/20140722/1406034439
function peco-select-gitadd() {
    local SELECTED_FILE_TO_ADD="$(git status --porcelain | \
                                  peco --query "$LBUFFER" | \
                                  awk -F ' ' '{print $NF}')"
    if [ -n "$SELECTED_FILE_TO_ADD" ]; then
      BUFFER="git add $(echo "$SELECTED_FILE_TO_ADD" | tr '\n' ' ')"
      CURSOR=$#BUFFER
    fi
    zle accept-line
}
zle -N peco-select-gitadd
bindkey "^a^a" peco-select-gitadd
