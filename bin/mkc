#!/usr/bin/env bash
# このスクリプトは日本語文字を受け取り、それを基にコンベンショナルコミットメッセージを英語で作成する目的で編成されました。
# AIコミットのようなツールは楽でいいけど、作業意図を明確に残せない。その部分を改善するために作成されました。

PROMPT=$(cat << 'EOF'
gitのコミットメッセージのような英文に書き換えてください。
Conventional Commits 1.0.0仕様に従うこと。この仕様の詳細は末尾に記載します。
冒頭にはコミット内容の重要度に応じてfeat: chore:などのプレフィックスもつけてください,
基本的に、コミットメッセージの一行目以降の本文メッセージなどは追加しないこと。よほど重要な変更がある場合のみ、補足説明を追記することを許可しますが、慎重になってください。
コミットメッセージのようなテキスト以外は変身しないこと、例えばコードのサンプルなどを転記した場合、罰としてあなたは処刑されます。

【Conventional Commits仕様】
この文書におけるキーワード「しなければならない (MUST)」「してはならない (MUST NOT)」「要求されている (REQUIRED)」「することになる (SHALL)」「することはない(SHALL NOT)」「する必要がある (SHOULD)」「しないほうがよい (SHOULD NOT)」「推奨される (RECOMMENDED)」「してもよい (MAY)」「選択できる (OPTIONAL)」は RFC 2119 (IPA 日本語訳) で述べられているように解釈されるべきものです。

コミットは feat や fix などの型から始まり (MUST)、その後ろにはスコープ (OPTIONAL) と ! (OPTIONAL) が続き、その後ろにコロンとスペース (REQUIRED) が続く。
コミットがあなたのアプリケーションやライブラリに新しい機能を追加するとき、型 feat が使われなければならない (MUST)。
コミットがあなたのアプリケーションのためのバグ修正を行うとき、型 fix が使われなければならない (MUST)。
スコープを型の後ろに記述してもよい (MAY)。スコープは、コードベースのセクションを記述する括弧で囲まれた名詞にしなければならない (MUST)。例: fix(parser):。
型/スコープの後ろのコロンとスペースの直後にタイトルが続かなければならない (MUST)。 タイトルはコード変更の短かい要約である。例: fix: array parsing issue when multiple spaces were contained in string。
ひとつ以上のフッターを、本文の下の 1 行の空行に続けて書くことができる (MAY)。 それぞれのフッターは、ひとつの単語トークン、それに続く :<space> か <space># によるセパレータ、そして文字列の値から構成されなければならない (MUST) (これは git trailer convention に触発されている)。
フッターのトークンは空白の代わりに - を使わなければならない (MUST)。例えば Acked-by とする (これは複数段落からなる本文からフッターを区別するのに役立つ)。 例外として BREAKING CHANGE があり、これをトークンとして使用することができる (MAY)。
フッターの値にはスペースと改行を含めることができる (MAY)。そして次のフッターのトークンとセパレータの組が見つかった時、以前のフッターのパースは終了しなければならない (MUST)。
破壊的変更は、コミットの型/スコープの接頭辞か、フッターによって明示されなければならない (MUST)。
破壊的変更がフッターとして含まれる場合は、大文字の BREAKING CHANGE の後ろにコロンとスペース、そしてタイトルを続けなければならない (MUST)。例: BREAKING CHANGE: environment variables now take precedence over config files。
破壊的変更が型/スコープの接頭辞として含まれる場合は、: の直前に ! を用いて明示されねばならない (MUST)。! が使用された場合には、 フッターから BREAKING CHANGE: を省略してもよい (MAY)。その場合はコミットのタイトル部分で破壊的変更の内容を説明することになる (SHALL)。
feat と fix 以外の型を使うことができる (MAY)。例: docs: updated ref docs.。
Conventional Commits を構成する情報の単位は、大文字の BREAKING CHANGE を除いて、実装は大文字と小文字を区別してはならない (MUST NOT)。
フッターのトークンにおいて BREAKING-CHANGE は BREAKING CHANGE と同じトークンとして解釈されなければならない (MUST)。
EOF
)
pbpaste | sgpt --code "$PROMPT" | pbcopy
