scriptencoding utf-8
if has('vim_starting')
  set runtimepath+=~/.vim/plugged/vim-plug
  if !isdirectory(expand('~/.vim/plugged/vim-plug'))
    echo 'install vim-plug...'
    call feedkeys(' ')
    call system('mkdir -p ~/.vim/plugged/vim-plug')
    call system('git clone https://github.com/junegunn/vim-plug.git ~/.vim/plugged/vim-plug/autoload')
  end
endif

filetype off
call plug#begin('~/.vim/plugged')
" Edit {{{
  " NERD_commenter.vim
  Plug 'scrooloose/nerdcommenter'
  " visually indent guide
  if has('nvim')
    Plug 'lukas-reineke/indent-blankline.nvim'
  else
    Plug 'nathanaelkane/vim-indent-guides'
  endif
  " yioneko/nvim-yati
  " Plug 'yioneko/nvim-yati'
  " vim-easy-align : 高機能整形・桁揃えプラグイン
  Plug 'junegunn/vim-easy-align', { 'on': '<Plug>(EasyAlign)' }
  " undo履歴を追える (need python support)
  Plug 'mbbill/undotree', { 'on': 'UndotreeToggle' }
  " Plug 'sjl/gundo.vim'
  " surround.vim : テキストを括弧で囲む／削除する
  Plug 'tpope/vim-surround'
  " vim-operator-user : 簡単にoperatorを定義できるようにする
  Plug 'kana/vim-operator-user'
  " operator-replace : yankしたものでreplaceする
  Plug 'kana/vim-operator-replace'
  " textobj-user : 簡単にVimエディタのテキストオブジェクトをつくれる
  Plug 'kana/vim-textobj-user'
  " vim-textobj-fold : 折りたたまれたアレをtext-objectに
  Plug 'kana/vim-textobj-fold'
  " vim-textobj-indent : インデントされたものをtext-objectに
  Plug 'kana/vim-textobj-indent'
  " 括弧の入力
  Plug 'kana/vim-smartinput'
  " phpDocumento
  Plug 'vim-scripts/PDV--phpDocumentor-for-Vim', { 'for' : 'php' }
  " Emmet-vim
  Plug 'mattn/emmet-vim'
  " editorconfig
  Plug 'editorconfig/editorconfig-vim'
  " Ansible
  Plug 'pearofducks/ansible-vim', { 'for' : 'yaml.ansible' }
  " https://mattn.kaoriya.net/software/vim/20200106103137.htm
  Plug 'mattn/vim-goimports', { 'for' : 'go' }
" }}}

" Completion {{{
  Plug 'Shougo/neosnippet'
  Plug 'neoclide/coc.nvim', {'branch': 'release'}
  Plug 'antoinemadec/coc-fzf'
" }}}

" Searching/Moving{{{
  " vim-smartword : 単語移動がスマートな感じで
  Plug 'kana/vim-smartword'
  " camelcasemotion : CamelCaseやsnake_case単位でのワード移動
  Plug 'vim-scripts/camelcasemotion'
  " matchit.vim : 「%」による対応括弧へのカーソル移動機能を拡張
  Plug 'vim-scripts/matchit.zip'
  " eregex.vim : vimの正規表現をrubyやperlの正規表現な入力でできる :%S/perlregex/
  Plug 'othree/eregex.vim'
  if has('nvim')
    "'phaazon/hop.nvim'
    Plug 'phaazon/hop.nvim'
  else
    " 'easymotion/vim-easymotion'
    Plug 'easymotion/vim-easymotion'
  endif
  " incremental search
  Plug 'haya14busa/incsearch.vim'
  Plug 'haya14busa/incsearch-easymotion.vim'
" }}}

" Programming {{{
  " pythonの環境周り
  Plug 'jmcantrell/vim-virtualenv' , { 'for': 'python' }
  " python formatter
  Plug 'mindriot101/vim-yapf' , { 'for': 'python' }
  " pydocstring
  Plug 'heavenshell/vim-pydocstring' , { 'for': 'python' }
  " python
  Plug 'kh3phr3n/python-syntax' , { 'for': 'python' }
  " quickrun.vim : 編集中のファイルを簡単に実行できるプラグイン
  Plug 'thinca/vim-quickrun'
  " perldocやphpmanual等のリファレンスをvim上で見る
  Plug 'thinca/vim-ref'
  " SQLUtilities : SQL整形、生成ユーティリティ
  Plug 'vim-scripts/SQLUtilities'
  " ソースコード上のメソッド宣言、変数宣言の一覧を表示
  Plug 'liuchengxu/vista.vim'
  " golang line debugger
  Plug 'sebdah/vim-delve', { 'for' : 'go' }
  " vim-test
  Plug 'vim-test/vim-test'
  Plug 'tpope/vim-dispatch'
  " gotests
  Plug 'buoto/gotests-vim', { 'for' : 'go' }
  " terraform
  Plug 'hashivim/vim-terraform', { 'for' : 'terraform' }
" }}}

" Syntax {{{
  if has('nvim')
    Plug 'nvim-treesitter/nvim-treesitter', {'do': ':TSUpdate'}
    " " Rainbow Parentheses
    Plug 'p00f/nvim-ts-rainbow'
    " m-demare/hlargs.nvim
    Plug 'm-demare/hlargs.nvim'
  else
    " Rainbow Parentheses
    Plug 'junegunn/rainbow_parentheses.vim'
  endif
  " helm
  Plug 'towolf/vim-helm'
  " haml"
  Plug 'vim-scripts/Haml'
  " JavaScript
  Plug 'vim-scripts/JavaScript-syntax'
  " jQuery
  Plug 'vim-scripts/jQuery'
  " nginx conf
  Plug 'vim-scripts/nginx.vim'
  " markdown
  Plug 'tpope/vim-markdown', { 'for' : 'markdown' }
  Plug 'nelstrom/vim-markdown-folding', { 'for' : 'markdown' }

  " terraform and hcl
  " Plug 'fatih/vim-hclfmt'
  " html5.vim
  Plug 'othree/html5.vim'
  " css3 syntax
  Plug 'hail2u/vim-css3-syntax'
  " json.vim
  Plug 'elzr/vim-json', { 'for' : 'json' }
  " plantuml
  Plug 'aklt/plantuml-syntax'
  " vcl for varnish
  Plug 'smerrill/vcl-vim-plugin'
  " tweekmonster/hl-goimport.vim
  Plug 'tweekmonster/hl-goimport.vim', { 'for' : 'go' }
  " RRethy/vim-illuminate
  Plug 'RRethy/vim-illuminate'
  if has('nvim')
    " 'norcalli/nvim-colorizer.lua'
    Plug 'norcalli/nvim-colorizer.lua'
  endif
" }}}

" Utility {{{
  " vimproc : vimから非同期実行。vimshelleで必要
  Plug 'Shougo/vimproc.vim'
  " lambdalisue/fern.vim
  Plug 'lambdalisue/fern.vim'
  Plug 'lambdalisue/fern-git-status.vim'
  Plug 'lambdalisue/nerdfont.vim'
  Plug 'lambdalisue/fern-renderer-nerdfont.vim'
  Plug 'lambdalisue/glyph-palette.vim'
  " vimからGit操作する
  Plug 'tpope/vim-fugitive'
  Plug 'tpope/vim-rhubarb'
  " gitgutter
  Plug 'airblade/vim-gitgutter'
  " ステータスラインをカッコよくする
  Plug 'vim-airline/vim-airline'
  if has('nvim')
    " 'akinsho/bufferline.nvim'
    Plug 'akinsho/bufferline.nvim', { 'tag': '*' }
  endif
  " 分割を維持してバッファ削除
  Plug 'rgarver/Kwbd.vim'
  " 現在開いている以外のバッファを全部削除
  Plug 'duff/vim-bufonly'
  " Use vim as a binary editor
  Plug 'Shougo/vinarise'
  " トップっぽいところをカレントディレクトリに
  " http://blog.remora.cx/2012/08/syntax-check-with-syntastic-and-rooter.html
  if !has('nvim')
    Plug 'airblade/vim-rooter'
  endif
  " Plug 'airblade/vim-rooter'
  " markdownのアウトライン表示
  Plug 'vim-voom/VOoM'
  " taskpaper.vim
  Plug 'davidoc/taskpaper.vim'
  " foldtextの見た目をよくする
  Plug 'LeafCage/foldCC'
  " repeat.vim
  Plug 'tpope/vim-repeat'
  " DirDiff.vim
  Plug 'vim-scripts/DirDiff.vim'
  " benchvimrc-vim
  " Plug 'mattn/benchvimrc-vim'
  " dash.vim
  Plug 'rizzatti/dash.vim'
  " biosugar0/vim-popyank
  Plug 'biosugar0/vim-popyank'
  " rickhowe/diffchar.vim
  Plug 'rickhowe/diffchar.vim'
  " haya14busa/vim-asterisk
  Plug 'haya14busa/vim-asterisk'
  " ryanoasis/vim-devicons
  Plug 'ryanoasis/vim-devicons'
  if has('nvim')
    " kevinhwang91/nvim-bqf
    Plug 'kevinhwang91/nvim-bqf'
  endif
  function! UpdateRemotePlugins(...)
    " Needed to refresh runtime files
    let &rtp=&rtp
    UpdateRemotePlugins
  endfunction
  Plug 'gelguy/wilder.nvim', { 'do': function('UpdateRemotePlugins') }
  "
" }}}

" ColorSchema{{{{
  " color schema 256
  Plug 'morhetz/gruvbox'
" }}}

" Fzf {{{{
  Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
  Plug 'junegunn/fzf.vim'
" }}}
call plug#end()

filetype plugin indent on

