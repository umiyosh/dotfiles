export PATH=/usr/local/bin:/usr/local/sbin:$PATH
export PATH=/opt/local/bin:/opt/local/sbin/:~/bin:$PATH

# osx alias
alias pbc='pbcopy'

# Terminal Colorの設定
export CLICOLOR=1
export LSCOLORS=ExFxCxDxBxegedabagacad

# vim
export EDITOR=vim

# man path
MANPATH=/usr/local/man:$MANPATH
export MANPATH
INFOPATH=/usr/local/info:$INFOPATH
export INFOPATH

# node.js
export NODE_PATH=/usr/local/lib/node:$PATH
export PATH=/usr/local/share/npm/bin:$PATH

function preexec() {
    typeset -gi CALCTIME=1
    typeset -gi CMDSTARTTIME=SECONDS
    PRE_FULL_CMD=${1}
    PRE_CMD=$( basename ${1%% *}  )
}
function precmd() {
  PRE_RESULT=$?
  if (( CALCTIME )) ; then
    typeset -gi ETIME=SECONDS-CMDSTARTTIME
    if [ $ETIME -ge 7 ]; then
      if [[ ! $PRE_CMD == vi* && ! $PRE_CMD == tig && ! $PRE_CMD == [ts]  && ! $PRE_CMD == ss && ! $PRE_CMD == git && ! $PRE_CMD == man ]]; then
        if [[ $PRE_RESULT -eq 0 ]]; then
          echo $fg[green] "[INFO] $PRE_FULL_CMD cmd \n nomal end \n elapse:$ETIME [sec]"
        else
          echo $fg[red] "[ERROR] $PRE_FULL_CMD cmd \n fail:$? \n elapse:$ETIME [sec]"
          #notif is Growl::Any command in my own way.
          notif "[ERROR] $PRE_FULL_CMD cmd \n fail:$? \n elapse:$ETIME [sec]"
        fi
      fi
    fi
  fi
  typeset -gi CALCTIME=0
}

# automjump
## alternative "brew --prefix". Because it's too slow
export BREW_PREFIX=${BREW_PREFIX:-$(dirname $(dirname $(which brew)))}
[[ -s ${BREW_PREFIX}/etc/profile.d/autojump.sh ]] && . ${BREW_PREFIX}/etc/profile.d/autojump.sh

# eval "$(direnv hook zsh)"

alias pw=$HOME/dotfiles/bin/ppwrapper

